filter {
	if [type] == "osblog" {
		mutate {
			add_tag => [ "v1.4" ]
		}
		######################################
		# pattern matching
		######################################
    		# try to process long pattern with trace. 
    		# If not working, try short pattern 
    		if "processed" not in [tags] {
    			grok {
    				patterns_dir => "./patterns"
    				match => { "message" => "(?m)%{OSBLOG02}" }
    				add_tag => ["processed", "OSBLOG02"]
    			}
    		}
    		if "processed" not in [tags] {
    			grok {
    				patterns_dir => "./patterns"
    				match => { "message" => "(?m)%{OSBLOG01}" }
    				remove_tag => ["_grokparsefailure"]
    				add_tag => ["processed", "OSBLOG01"]
    			}
    		}
    		if "processed" not in [tags] {
    			grok {
    				patterns_dir => "./patterns"
    				match => { "message" => "(?m)%{OSB_SPLIT_LOG}" }
    				remove_tag => ["_grokparsefailure"]
    				add_tag => ["processed", "OSB_SPLIT_LOG"]
    			}
    		}
		
		######################################
		# date matching
		######################################
		
		if [Country] == "US" {
			if "split" in [tags] {
        			date {
        				match => ["Timestamp2",
        					"YYYY-MM-dd HH:mm:ss.SSS'-0500 CDT'",
        					"YYYY-MM-dd HH:mm:ss.SSS'-0600 CST'"
        				]
        				timezone => "America/Chicago"
        			}
        		}
			if "split" not in [tags] {
				date {
					match => ["Timestamp",
						"ISO8601"
					]
					timezone => "America/Chicago"
				}
			}
		} else if [Country] == "CN" or [Country] == "DEV" {
			date {
				match => ["Timestamp2",
					"EEE MMM dd H:mm:ss 'CST' yyyy",
					"YYYY-MM-dd HH:mm:ss.SSS'+0800 CST'"
				]
				timezone => "Asia/Hong_Kong"
			}
		}

		# pattern was not working, send message as-is
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:LogMessage}" }
			}
		}
	}
	
########################################################################################################################
# OSB TRACE
########################################################################################################################  
	#Below is defined log filtering for osb logs
	if [type] == "osbtrace" {
		#Below is defined log filtering for OSB log
		if "processed" not in [tags] {
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "(?m)%{OSBDIAG_SPLIT1}" }
				add_tag => ["processed", "OSBDIAG_SPLIT1"]
			}
			# we matched the string -> now we extract hcitrace
			if "processed" in [tags] {
				grok {
					patterns_dir => "./patterns"
					match => { "LogMessage" => "%{OSB_HCITRACE}" }
					add_tag => ["OSB_HCITRACE"]
				}
#				grok {
#					patterns_dir => "./patterns"
#					match => { "LogMessage" => "%{OSB_FAULTSTRING}" }
#				}
			}
		}
		if "processed" not in [tags] {
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "(?m)%{OSBDIAG_SPLIT2}" }
				remove_tag => ["_grokparsefailure"]
				add_tag => ["processed", "OSBDIAG_SPLIT2"]
			}
		}
		if "processed" not in [tags] {
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "(?m)%{OSBDIAG2}" }
				remove_tag => ["_grokparsefailure"]
				add_tag => ["processed", "OSBDIAG2"]
			}
		}
		if "processed" not in [tags] {
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "(?m)%{OSBDIAG1}" }
				remove_tag => ["_grokparsefailure"]
				add_tag => ["processed", "OSBDIAG1"]
			}
		}
		if "OSBDIAG2" in [tags] {
			grok {
				patterns_dir => "./patterns"
				match => { "Trace" => "(?m)%{OSB_TRACE}" }
			}
		}
		# CN not tested yet
  		if [Country] == "CN" {
			date {
				match => ["Timestamp",
					"EEE MMM dd H:mm:ss 'CST' yyyy"
				]
				timezone => "Asia/Hong_Kong"
			}
		} 
		else if [Country] == "US" {
			if "split" in [tags] {
				date {
        				match => ["Timestamp2",
        					"YYYY-MM-dd HH:mm:ss.SSS'-0500 CDT'",
        					"YYYY-MM-dd HH:mm:ss.SSS'-0600 CST'"
        				]
        				timezone => "America/Chicago"
        			}
			} 
			else {
        			date {
        				match => ["Timestamp",
        					"ISO8601"
        				]
        				timezone => "America/Chicago"
        			}
			}
		}
		else if [Country] == "DEV" {
    			date {
    				match => ["Timestamp2",
    					"YYYY-MM-dd HH:mm:ss.SSS'+0600 ALMT'"
    				]
    				timezone => "Asia/Almaty"
    			}
		}
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:LogMessage}" }
				add_tag => ["processed"]
			}
		}
	}
}
