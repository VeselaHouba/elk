filter {
	if [type] == "hcp_app" {
		if [Country] == "HCPDEV" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{HCP_APP}" }
				add_tag => ["processed"]
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
				timezone => "UTC"
			}
		}
		else if [Country] == "CN" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{HCP_APP}" }
				add_tag => ["processed"]
			}
			if [path] == "/var/log/hcp/pay.log" {
				date {
					# Adjusting delay between deliver row to server
					match => ["Timestamp", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss.SSS'/CST'"]
					timezone => "UTC"
					add_tag => "UTC"
				}
			} else {
				date {
					# Adjusting delay between deliver row to server
					match => ["Timestamp", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss.SSS'/CST'"]
					timezone => "Asia/Hong_Kong"
					add_tag => "Hong_Kong"
				}
			}
		}
	}
	if [type] == "hcp_app" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
		}
		# On GrokParseFailure load message as-is
		if ("_grokparsefailure" in [tags]) {
		       	grok { match => { "message" => "(?m)%{GREEDYDATA:LogMessage}" }	}
		}
	}
}