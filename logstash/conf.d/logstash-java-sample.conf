input { 
#  stdin {
#    codec => multiline {
#      pattern => "(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)|(^\s+...\s*\d+\s*common frames omitted.*)"
#	pattern => "^\s"
 #     negate => false
  #    what => "previous"
   # }
#  } 
   
   file {
      path => "/tmp/logfile"
      codec => multiline {
         pattern => "^%{TIMESTAMP_ISO8601} "
         negate =>true 
         what => "previous"
      }
   }	

#  tcp {
#     port => 7777
#     codec => multiline {
#       pattern => "^2011"
#       negate => true
#       what => "previous"
#     }     
#  }	

}

filter {
  if "processed" not in [tags] {
   grok {
      match => { "message" => "%{HSAPP1}"}
     patterns_dir => ["/home/milan/projects/logservice/logstash/patterns"]
     add_tag => ["processed", "HSAPP1"]
    }
  }
  if "processed" not in [tags] {
    grok {
      match => { "message" => "%{HSAPP2}"}
      patterns_dir => ["/home/milan/projects/logservice/logstash/patterns"]
      remove_tag => ["_grokparsefailure"]
      add_tag => ["processed", "HSAPP2"]
    }
  }
  if "processed" not in [tags] {
    grok {
      match => { "message" => "%{HSAPP3}"}
      patterns_dir => ["/home/milan/projects/logservice/logstash/patterns"]
      add_tag => ["processed","HSAPP3"]
    }
  }
}

output {
  stdout { 
    codec => rubydebug
  }
}
