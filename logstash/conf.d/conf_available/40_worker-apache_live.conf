input {
    redis {
   		host      => "localhost"
   		port      => 6379
   		data_type => "list"
   		key       => "apache"
		batch_count	=> 300
  	}
  	redis {
   		host      => "localhost"
   		port      => 6379
   		data_type => "list"
   		key       => "apache_access"
		batch_count	=> 300
  	}
    redis {
   		host      => "localhost"
   		port      => 6379
   		data_type => "list"
   		key       => "apache_error"
		batch_count	=> 300
  	}
}
filter {
	if [type] == "apache_access" and "live" in [tags] {
		if [Country] == "CN" or [Country] == "DEV" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{APACHE_ACCESS_LOG}" }
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Apache_Timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
				timezone => "Asia/Hong_Kong"
			}
		} else if [Country] == "US" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{APACHE_ACCESS_LOG_US}" }
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Apache_Timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
				timezone => "America/Chicago"
			}
		}
		geoip {
			source => "Apache_RemoteIp"
			target => "geoip"
			database => "/etc/logstash/GeoLiteCity.dat"
			add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
			add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
		}
		mutate {
			convert => [ "[geoip][coordinates]", "float"]
		}
	}

	if [type] == "apache_error" and "live" in [tags] {
		#Below is defined log filtering for apache error log
		grok {
			patterns_dir => "./patterns"
			match => { "message" => "%{APACHE_ERROR_LOG}" }
		}
		if [Country] == "CN" {
			date {
				# Adjusting delay between deliver row to server
				match => ["Apache_Timestamp", "EEE MMM dd HH:mm:ss yyyy"]
				timezone => "Asia/Hong_Kong"
			}
		} else if [Country] == "US" {
			date {
				# Adjusting delay between deliver row to server
				match => ["Apache_Timestamp", "EEE MMM dd HH:mm:ss yyyy"]
				timezone => "America/Chicago"
			}
		}
	}

	if [type] == "apache_access" or [type] == "apache_error" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
			add_tag => [ "%{type}" ]
		}

		if ("_grokparsefailure" in [tags]) {
		       	grok { match => { "message" => "(?m)%{GREEDYDATA:Apache_MessageText}" }	}
			#mutate { remove_tag => [ "_grokparsefailure" ] }
		}
	}
}
