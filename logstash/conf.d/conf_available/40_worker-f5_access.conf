#TODO: test timezone auto matching with Z (remove hard-coded timezone)
#TODO: f5 geoip
input {
	# CN multiple source hosts
	if [host] =~ /\.prod\.itc\.homecredit\.cn/ {
		redis {
			host		=> "scnvx040.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "f5_access"
		}
		redis {
			host		=> "scnvx041.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "f5_access"
		}
		redis {
			host		=> "scnvx042.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "f5_access"
		}
		redis {
			host		=> "scnvx043.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "f5_access"
		}
		redis {
			host		=> "scnvx044.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "f5_access"
		}
	}
	else {
	    redis {
	   		host      => "localhost"
	   		port      => 6379
	   		data_type => "list"
	   		key       => "f5_access"
	  	}
  	}
}
filter {
	if [type] == "f5_access" {
		grok {
			#Below is defined log filtering for f5 access log
			patterns_dir => "./patterns"
			match => { "message" => "%{F5_ACCESS_LOG}" }
		}
		if [Country] == "CN" or [Country] == "DEV" {
			date {
				# Adjusting delay between deliver row to server
				match => ["F5_Timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
				timezone => "Asia/Hong_Kong"
			}
		} else if [Country] == "US" {
			date {
				# Adjusting delay between deliver row to server
				match => ["F5_Timestamp", 
					"dd/MMM/yyyy:HH:mm:ss Z",
					"yyyy-MM-dd:HH:mm:ss.SSS Z"]
				timezone => "America/Chicago"
			}
		}
#		geoip {
#			source => "F5_RemoteHost"
#			target => "geoip"
#			database => "/etc/logstash/GeoLiteCity.dat"
#			add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
#			add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
#		}
#		mutate {
#			convert => [ "[geoip][coordinates]", "float"]
#		}
	}

	if [type] == "f5_access" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
			add_tag => [ "%{type}" ]
		}

		if ("_grokparsefailure" in [tags]) {
	       	grok { match => { "message" => "(?m)%{GREEDYDATA:F5_MessageText}" }	}
		}
	}
}
