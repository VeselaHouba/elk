filter {
	if [type] == "pki_app" {
		if [Country] == "US" or [Country] == "DEV" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{PKI_APP}" }
				add_tag => ["processed"]
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Pki_Timestamp", "yyyy-MM-dd HH:mm:ss"]
				timezone => "America/Chicago"
			}
		}
	}
	if [type] == "pki_app" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
		}
		# On GrokParseFailure load message as-is
		if ("_grokparsefailure" in [tags]) {
		       	grok { match => { "message" => "(?m)%{GREEDYDATA:Pki_MessageText}" }	}
		}
	}
	
	if [type] == "pki_php" {
		if [Country] == "US" or [Country] == "DEV" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{PKI_PHP}" }
				add_tag => ["processed"]
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Pki_Timestamp", "dd-MMM-yyyy HH:mm:ss"]
				timezone => "America/Chicago"
			}
			# UTC timezone
			if ("_dateparsefailure" in [tags] ) {
				date {
					# Adjusting delay between deliver row to server
					match => ["Pki_Timestamp", "dd-MMM-yyyy HH:mm:ss 'UTC'"]
					timezone => "UTC"
					remove_tag => ["_dateparsefailure"]
				}
			}
		}
	}
	if [type] == "pki_php" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
		}
		# On GrokParseFailure load message as-is
		if ("_grokparsefailure" in [tags]) {
		       	grok { match => { "message" => "(?m)%{GREEDYDATA:Pki_MessageText}" }	}
		}
	}
}