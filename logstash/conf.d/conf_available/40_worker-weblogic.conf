filter {
	#Below is defined log filtering for weblogic server logs
	if [type] == "wlserver" {
		grok {
			patterns_dir => "./patterns"
			match => { "message" => "(?m)%{WLS_SRV_LOG}" }
			add_tag => ["processed"]
		}
		mutate {
			rename => [ "host", "Unix_Hostname" ]
			uppercase => [ "Wls_Severity" ]
			add_tag => [ "%{type}" ]
  		}
		if [Country] == "CN" or [Country] == "DEV" {
  		  	date {
				# localization mess...
				match => ["Wls_Timestamp",
					"MMM dd, yyyy h:mm:ss a 'CST'",
					"MMM dd, yyyy h:mm:ss a 'CEST'",
					"dd.MM.yyyy H:mm:ss z",
					"dd.MM.yyyy H:mm:ss a 'CST'",
					"dd.MM.yyyy H:mm:ss a 'CEST'"
				]
				timezone => "Asia/Hong_Kong"
			}
		} else if [Country] == "US" {
			date {
				# localization mess...
				match => ["Wls_Timestamp",
					"MMM dd, yyyy h:mm:ss a 'CDT'",
					"MMM dd, yyyy h:mm:ss a 'CST'",
					"yyyy-MM-dd'T'HH:mm:ss.SSS 'CDT'",
					"yyyy-MM-dd'T'HH:mm:ss.SSS 'CST'",
					"dd.MM.yyyy H:mm:ss a 'CDT'"
				]
				timezone => "America/Chicago"
			}
		}
  		if ("_grokparsefailure" in [tags]) {
	  		grok {
				match => { "message" => "(?m)%{GREEDYDATA:Wls_MessageText}" }
				add_tag => ["processed"]
			}
		}
	}
	if [type] == "osbserver" {
		#Below is defined log filtering for OSB log
		grok {
			patterns_dir => "./patterns"
			match => { "message" => "(?m)%{OSB_SRV_LOG}" }
		}
  		if [Country] == "CN" or [Country] == "DEV" {
			date {
				match => ["Osb_Timestamp",
					"EEE MMM dd H:mm:ss 'CST' yyyy",
					"EEE MMM dd H:mm:ss 'CEST' yyyy",
					"EEE MMM dd H:mm:ss 'PHT' yyyy"
				]
				timezone => "Asia/Hong_Kong"
			}
		}
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:Osb_MessageText}" }
				add_tag => ["processed"]
			}
		}
	}
}
