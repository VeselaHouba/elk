input {
#Below are defined inputs from redis for weblogic logs
    redis {
   		host      => "localhost"
   		port      => 6379
   		data_type => "list"
   		key       => "weblogic"
  	}
}
filter {
    #Below is defined log filtering for weblogic server logs
    if [type] == "wlserver" {
    	grok {
		    patterns_dir => "./patterns"
		    match => { "message" => "(?m)%{WLS_SRV_LOG}" }
		}
    	mutate {
    		rename => [ "host", "Unix_Hostname" ]
		    uppercase => [ "Wls_Severity" ]
		    add_tag => [ "%{type}" ]
  		}
  		if [country] == "CN" {
	  	    date {
				# localization mess...
				match => ["Wls_Timestamp",
				        "MMM dd, yyyy h:mm:ss a 'CST'",
				        "dd.MM.yyyy H:mm:ss z",
				        "dd.MM.yyyy H:mm:ss a 'CST'"
				]
	        }
	    } else if [country] == "US" {
	    	date {
				# localization mess...
				match => ["Wls_Timestamp",
					"MMM dd, yyyy h:mm:ss a 'CDT'",
					"MMM dd, yyyy h:mm:ss a 'CST'",
					"yyyy-MM-dd'T'HH:mm:ss.SSS 'CDT'",
					"yyyy-MM-dd'T'HH:mm:ss.SSS 'CST'",
					"dd.MM.yyyy H:mm:ss a 'CDT'"
				]
			}
	    }
  		if ("_grokparsefailure" in [tags]) {
      		grok {
                match => { "message" => "(?m)%{GREEDYDATA:Wls_MessageText}" }
        	}
	    }
	}
	if [type] == "osbserver" {
	    #Below is defined log filtering for OSB log
		grok {
		    patterns_dir => "./patterns"
		    match => { "message" => "(?m)%{OSB_SRV_LOG}" }
		}
		mutate {
			rename => [ "host", "Unix_Hostname" ]
		    add_tag => [ "%{type}" ]
		}
  		if [country] == "CN" {
			date {
				match => ["Osb_Timestamp",
					"EEE MMM dd H:mm:ss 'CST' yyyy"
				]
				timezone => "Asia/Hong_Kong"
			}
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:Osb_MessageText}" }
	    		}
		}
	}
}
