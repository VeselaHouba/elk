input {
    	#Below are defined inputs from redis for hsapp logs
    	redis {
    		host		=> "localhost"
    		port		=> 6379
    		data_type	=> "list"
    		key		=> "hsapp"
    	}
}

filter {
	if [type] == "hsapp" {
		if "blaze" in [tags] {
			# blaze
			grok {
				match => { "message" => "%{BLAZEAPP}"}
				patterns_dir => ["./patterns"]
				add_tag => ["processed"]
			}
		}
		if [Country] == "CN" or [Country] == "DEV" {
			# switch sequence for parsing
			if "processed" not in [tags] {
                		grok {
                			match => { "message" => "%{HSAPP2}"}
                			patterns_dir => ["./patterns"]
                			add_tag => ["processed", "HSAPP2"]
            			}
            		}
			if "processed" not in [tags] {
				grok {
					match => { "message" => "%{HSAPP3}"}
					patterns_dir => ["./patterns"]
					remove_tag => ["_grokparsefailure"]
					add_tag => ["processed", "HSAPP3"]
				}
			}
			if "processed" not in [tags] {
				grok {
					match => { "message" => "%{HSAPP1}"}
					patterns_dir => ["./patterns"]
					remove_tag => ["_grokparsefailure"]
					add_tag => ["processed","HSAPP1"]
				}
			}
		} else { 
			# homer/hosel
			#Below is defined log filtering for hosel apps
			if "processed" not in [tags] {
				grok {
					match => { "message" => "%{HSAPP1}"}
					patterns_dir => ["./patterns"]
					add_tag => ["processed", "HSAPP1"]
				}
			}
			if "processed" not in [tags] {
				grok {
					match => { "message" => "%{HSAPP2}"}
					patterns_dir => ["./patterns"]
					remove_tag => ["_grokparsefailure"]
					add_tag => ["processed", "HSAPP2"]
					}
			}
			if "processed" not in [tags] {
				grok {
					match => { "message" => "%{HSAPP3}"}
					patterns_dir => ["./patterns"]
					remove_tag => ["_grokparsefailure"]
					add_tag => ["processed","HSAPP3"]
				}
			}
		}
		
		if [Country] == "CN" or [Country] == "DEV" {
			date {
				# Adjusting delay between deliver row to server
				match => ["App_timestamp", "YYYY-MM-dd HH:mm:ss,SSS"]
				timezone => "Asia/Hong_Kong"
			}
		} else if [Country] == "US" {
			if "blaze" in [tags] {
				# Ugly hack to add missing date to blaze logs (contains only time)
				# this will only work on logs created the same day as read
				ruby {	
					code => "event['logdate']=Time.now.strftime('%Y-%m-%d')"
				}
				mutate {
					# merge with existing time field
					add_field => {"App_timestamp2" => "%{logdate}_%{App_timestamp}"}
				}
				date {
					match => ["App_timestamp2", "YYYY-MM-dd_HH:mm:ss.SSS"]
					timezone => "America/Chicago"
					remove_field => ["App_timestamp2"]
				}
			} else {
				date {
					match => ["App_timestamp", "YYYY-MM-dd HH:mm:ss,SSS"]
					timezone => "America/Chicago"
				}
			}
		}
		# dropping debug messages
#		if [App_level] == "DEBUG" or [App_level] == "TRACE"{
#			drop { }
#		}
	}
}

