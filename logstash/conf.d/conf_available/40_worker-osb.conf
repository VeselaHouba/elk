input {
	#Below are defined inputs from redis for osb logs
	redis {
		host	  => "localhost"
		port	  => 6379
		data_type => "list"
		key	   => "osbdiag"
	}
}
filter {
	#Below is defined log filtering for osb logs
	if [type] == "osbdiag" {
		#Below is defined log filtering for OSB log
		grok {
			patterns_dir => "./patterns"
			match => { "message" => "(?m)%{OSB_DIAG_LOG}" }
		}
		grok {
			patterns_dir => "./patterns"
			match => { "Osb_Trace" => "(?m)%{OSB_TRACE}" }
		}
		xml {
			source => "Osb_XML01"
			target => "Osb_XML01_parsed"
		}
		xml {
			source => "Osb_XML02"
			target => "Osb_XML02_parsed"
		}
#		xml {
#			source => "Osb_XML02"
#			xpath => [ "/soapenv:Envelope/soapenv:Body/chec:checkFinancialProductEligibilityRequest/chec:itemList/chec:itemInfo/chec:additionalOutOfPocketAmnout/text()", "Osb_Xpath01" ]
#		}
		mutate {
			add_tag => [ "%{type}" ]
			remove_field => [ "Osb_XML01","Osb_XML02" ]
		}
  		if [Country] == "CN" {
			date {
				match => ["Osb_Timestamp",
					"EEE MMM dd H:mm:ss 'CST' yyyy"
				]
				timezone => "Asia/Hong_Kong"
			}
		} 
		else if [Country] == "US" or [Country] == "DEV" {
			date {
				match => ["Osb_Timestamp",
					"ISO8601"
				]
				timezone => "America/Chicago"
			}
		}
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:Osb_MessageText}" }
			}
		}
	}
}
