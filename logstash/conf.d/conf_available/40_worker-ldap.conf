input {
	# CN multiple source hosts
	if [host] =~ /\.prod\.itc\.homecredit\.cn/ {
		redis {
			host		=> "scnvx040.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "ldap_access"
		}
		redis {
			host		=> "scnvx041.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "ldap_access"
		}
		redis {
			host		=> "scnvx042.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "ldap_access"
		}
		redis {
			host		=> "scnvx043.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "ldap_access"
		}
		redis {
			host		=> "scnvx044.prod.itc.homecredit.cn"
			port		=> 6379
			data_type	=> "list"
			key			=> "ldap_access"
		}
	}
	else {
		redis {
			host      => "localhost"
			port      => 6379
			data_type => "list"
			key       => "ldap_access"
	  	}
  	}
}
filter {
	if [type] == "ldap_access" {
		if [Country] == "IN" or [Country] == "DEV" {
			#Below is defined log filtering for apache access log
			grok {
				patterns_dir => "./patterns"
				match => { "message" => "%{LDAP_ACCESS_LOG}" }
			}
			date {
				# Adjusting delay between deliver row to server
				match => ["Ldap_Timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
				timezone => "Asia/Kolkata"
			}
		}
	}
	if [type] == "ldap_access" {
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
			add_tag => [ "%{type}" ]
		}
		# On GrokParseFailure load message as-is
		if ("_grokparsefailure" in [tags]) {
		       	grok { match => { "message" => "(?m)%{GREEDYDATA:Ldap_MessageText}" }	}
		}
	}
}