input {
    redis {
   		host      => "localhost"
   		port      => 6379
   		data_type => "list"
   		key       => "apache_rotated"
		batch_count => 300
  	}
}
filter {
	if [type] == "apache_access" and "rotated" in [tags] {
		#Below is defined log filtering for apache access log
		grok {
			patterns_dir => "./patterns"
			match => { "message" => "%{APACHE_ACCESS_LOG}" }
		}
	        mutate {
#	                rename => [ "host", "Unix_Hostname" ]
	                uppercase => [ "Environment" ]
	                uppercase => [ "Country" ]
	                add_tag => [ "%{type}" ]
		}
		date {
			# Adjusting delay between deliver row to server
			match => ["Apache_Timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
			timezone => "Asia/Hong_Kong"
		}
		if ("_grokparsefailure" in [tags]) {
			grok {
				match => { "message" => "(?m)%{GREEDYDATA:Apache_MessageText}" }
			}
		}
	}

	if [type] == "apache_error" and "rotated" in [tags] {
	#Below is defined log filtering for apache error log
		grok {
		patterns_dir => "./patterns"
			match => { "message" => "%{APACHE_ERROR_LOG}" }
		}
		mutate {
			uppercase => [ "Environment" ]
			uppercase => [ "Country" ]
			add_tag => [ "%{type}" ]
	}
	date {
		# Adjusting delay between deliver row to server
		match => ["Apache_Timestamp", "EEE MMM dd HH:mm:ss yyyy"]
		timezone => "Asia/Hong_Kong"
	}
	if ("_grokparsefailure" in [tags]) {
       			grok {
				match => { "message" => "(?m)%{GREEDYDATA:Apache_MessageText}" }
			}
		}
	}
}
